Benchmark
=======================

测试方案及测试结果

一、测试方案
-----------------------

服务器配置情况如下： ::

    1台test server： 2CPU (Intel Xeon 2.80GHz), 2GB RAM, 80GB Disk
    1台tracker server：2CPU (Intel Xeon 2.80GHz), 2GB RAM, 80GB Disk
    4台storage server：2CPU (Intel Xeon 2.80GHz), 4GB RAM, 1TB Disk (2 * 512GB SATA)

测试环境的带宽为1G，服务器直接接到千兆交换机上，服务器之间通信时互不影响。

存储节点分为2个组，每组2台服务器。

测试文件大小及数量：

==========   ==========
文件大小      文件数量
==========   ==========
5KB          100万个
50KB         200万个
200KB        100万个
1MB          20万个
10MB         2万个
100MB        1千个
==========   ==========

每种类型的文件只要一个即可，采用重复上传的方式。比如5KB的一个文件重复上传100万次。

和平台的连接采用短连接方式。

测试文件内容中的每个字节值为随机数，文件内容直接存放在内存中，通过API直接把文件内容上传到存储平台。

上传和下载文件时，采用随机的方法。以文件总数量为准进行随机抽选。上传文件时，对于某种类型的文件（如5KB类型），如 果已经达到了上传的文件数量（如100万个），则 不再上传。

需要进行并发测试，采用进程方式，每个进程各自记录日志文件。

* Upload：10个并发进程，需要记录每个进程运行花费的时间，需要在日志文件中记录上传文件ID及文件类型
* Download：20个并发进程，共运行8小时，需要记录下载完成数量和成功数量。下载下来的文件直接舍弃，不需要保存到磁盘，也不需要保存到内存
* Delete：10个并发进程，需要记录每个进程运行花费的时间

需要记录两个纬度的统计信息：

1. 按storage server统计，记录的字段有ip地址、操作总次数、成功次数
2. 按文件类型 统计：文件类型、操作总次数、成功次数

操作分别为：upload、download和delete

文件类型分别为：5KB、50KB、200KB、1MB等等


二、测试结果
-----------------------

注：存储节点的2块磁盘采用了LVM，做了RAID0，没有使用RAID设备，磁盘的IO较差。写了一个小的测试程序直接write 1GB的文件，每次写1MB，磁盘IO只能达到3MB多一点。

1. Upload： ::

    total_count=4221000, success_count=4221000, success ratio: 100.00% time_used=118369s, avg time used: 28ms, QPS=35.66
    file_type total_count success_count time_used(s) avg(ms) QPS success_ratio
    5K 1000000 1000000 25178 25 39.72 100.00
    50K 2000000 2000000 52328 26 38.22 100.00
    200K 1000000 1000000 30177 30 33.14 100.00
    1M 200000 200000 7397 36 27.04 100.00
    10M 20000 20000 2223 111 9.00 100.00
    100M 1000 1000 861 861 1.16 100.00

    IO speed = 6902 KB
    ip_addr  total_count success_count time_used(s) avg(ms) QPS success_ratio
    119.42.240.98 1055253 1055253 30797 29 34.26 100.00
    119.42.240.103 1055246 1055246 30144 28 35.01 100.00
    119.42.240.99 1055262 1055262 29855 28 35.35 100.00
    119.42.240.100 1055239 1055239 27368 25 38.56 100.00

2. Download： ::

    total_count=1142383, success_count=1142383, success ratio: 100.00% time_used=28800s, avg time used: 25ms, QPS=39.67

    file_type total_count success_count time_used(s) avg(ms) QPS success_ratio
    5K 268491 268491 3822 14 70.25 100.00
    50K 542050 542050 9937 18 54.55 100.00
    200K 271837 271837 6937 25 39.19 100.00
    1M 54389 54389 3450 63 15.76 100.00
    10M 5283 5283 2866 542 1.84 100.00
    100M 333 333 1770 5317 0.19 100.00

    IO speed = 7871 KB
    ip_addr  total_count success_count time_used(s) avg(ms) QPS success_ratio
    119.42.240.100 284907 284907 7076 24 40.26 100.00
    119.42.240.103 284901 284901 6479 22 43.97 100.00
    119.42.240.98 286288 286288 8359 29 34.25 100.00
    119.42.240.99 286287 286287 6870 23 41.67 100.00

3. Delete： ::

    total_count=4221000, success_count=4221000, success ratio: 100.00% time_used=6565s, avg time used: 1ms, QPS=642.96

    file_type total_count success_count time_used(s) avg(ms) QPS success_ratio
    5K 1000000 1000000 337 0 2967.36 100.00
    50K 2000000 2000000 3588 1 557.41 100.00
    200K 1000000 1000000 1847 1 541.42 100.00
    1M 200000 200000 378 1 529.10 100.00
    10M 20000 20000 135 6 148.15 100.00
    100M 1000 1000 51 51 19.61 100.00

    ip_addr  total_count success_count time_used(s) avg(ms) QPS success_ratio
    119.42.240.98 1055253 1055253 1626 1 648.99 100.00
    119.42.240.103 1055246 1055246 1542 1 684.34 100.00
    119.42.240.99 1055262 1055262 1620 1 651.40 100.00
    119.42.240.100 1055239 1055239 1550 1 680.80 100.00